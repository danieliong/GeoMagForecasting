# @package _group_

name: ace

load:
  path: data/ace_2010-2019.csv
  positions_path: data/ace_pos_2010-2019.csv
  time_col: "times"
  features:
    - "density"
    - "speed"
    - "temperature"
    - "bx"
    - "by"
    - "bz"
    - "status_swepam"
    - "status_mag"


columns:
  times: "times"
  speed: "speed"
  density: "density"
  temperature: "temperature"
  x_coord: "x"
  status: [ "status_swepam", "status_mag" ]
    
# IDEA: Decide order here instead of in HydraPipeline? 
pipeline:
  # Arguments for HydraPipeline
  interpolate:
    method: linear
    axis: 0
    limit_direction: both
    limit: 15
  resample:
    freq: 'T'
    func: "mean"
  scaler:
    scaler: null
    kwargs: null
  func:
    func: null
    inverse_func: null
    kwargs: null
  values_filter:
    bad_values: [ -9999, 999 ]
    value_ranges:
      density: [ 0, 200 ]
      speed: [ 200, 2000 ]
      temperature: [ 1e4, 1e7 ]
      bx: [ -200, 200 ]
      by: [ -200, 200 ]
      bz: [ -200, 200 ]
  filter:
    type: "limited_change"
    speed_col: ${features.columns.speed}
    density_col: ${features.columns.density}
    temp_col: ${features.columns.temperature}
    copy: True
    limited_change:
      factor: 1.3
      change_down: 30
      change_ups: [ 50, 10 ]
  propagate:
    x_coord_col: ${features.columns.x_coord}
    speed_col: ${features.columns.speed}
    time_level: ${features.columns.times}
    freq: "T"
  delete_cols:
    - ${features.columns.x_coord}
    # CHECK: Don't know if this will work since status is a list
    - ${features.columns.status}
